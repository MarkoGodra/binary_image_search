#include <stdio.h>
#include <inttypes.h>
#include <assert.h>
#include "queue.h"

int_least8_t main();
static void print_queue(const queue_t* queue);

int_least8_t main()
{
	queue_t* queue = create_queue();

	assert(is_empty(queue) == FALSE);

	int_least8_t num1 = 5;
	int_least8_t num2 = 6;
	int_least8_t num3 = 7;
	int_least8_t num4 = 8;
	int_least8_t num5 = 9;


	printf("Queue is empty: %"PRIdLEAST8"\n", is_empty(queue));

	node_t* node = create_node((void*)&num1);
	enqueue(queue, node);

	node = create_node((void*)&num2);
	enqueue(queue, node);
	node = create_node((void*)&num3);
	enqueue(queue, node);
	node = create_node((void*)&num4);
	enqueue(queue, node);
	node = create_node((void*)&num5);
	enqueue(queue, node);

	printf("Queue is empty: %"PRIdLEAST8"\n", is_empty(queue));

	print_queue(queue);


	delete_queue(queue);

	return 0;
}

static void print_queue(const queue_t* queue)
{
	printf("\nPrinting queue\n");
	if(is_empty(queue) == FALSE)
	{
		node_t* temp = queue->head;
		int_least8_t* temp_struct = (int_least8_t*)temp->value;
		while(temp != NULL){
			temp_struct = (int_least8_t*)temp->value;
			printf("%"PRIdLEAST8"\n", *temp_struct);
			temp = temp->next;
		}
	}
	else
	{
		printf("\nQueue is empty!\n");
	}
}
